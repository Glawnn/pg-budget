name: Release

on:
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    outputs:
      version: ${{ steps.get_version.outputs.version }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install UV
        run: pip install uv

      - name: Get version from UV
        id: get_version
        shell: bash
        run: |
          VERSION=$(uv version --short)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Build with PyInstaller
        run: |
          uv run build

      - name: Install zip on Windows
        if: runner.os == 'Windows'
        run: choco install zip -y
        shell: pwsh
      
      - name: Zip dist folder
        shell: bash
        run: |
          cd dist
          zip -r "pg-budget-${{ runner.os }}-${{ env.VERSION }}.zip" "${{ runner.os }}"
    
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: pg-budget-${{ runner.os }}-${{ env.VERSION }}
          path: dist/pg-budget-${{ runner.os }}-${{ env.VERSION }}.zip


  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ needs.build.outputs.version }}
          name: "pg-budget v${{ needs.build.outputs.version }}"
          files: dist/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
